{{/*
deployment
*/}}
---
{{ include "library.deployment" . }}
    spec:
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run
            type: Directory
        - name: userdir
          hostPath:
            path: /var/lib/orchest/userdir
            type: DirectoryOrCreate
      serviceAccountName: {{ template "library.metadata.name" . }}      
      containers:
      - name: orchest-api
        image: orchest/orchest-api:latest
        ports:
        - containerPort: 80
        env:
        - name: "ORCHEST_HOST_GID"
          value: "1"
        - name: "PYTHONUNBUFFERED"
          value: "TRUE"
        - name: "ORCHEST_GPU_ENABLED_INSTANCE"
          value: "FALSE"
        volumeMounts:
         - name: dockersock
           mountPath: /var/run
         - name: userdir
           mountPath: /userdir
        startupProbe:
          httpGet:
            path: /api
            port: 80
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          # Be generous with time because the container could be doing a
          # cleanup and not be able to respond.
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 20
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /api
            port: 80
            scheme: HTTP
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5