//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 The orchest Authors.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrchestCluster) DeepCopyInto(out *OrchestCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrchestCluster.
func (in *OrchestCluster) DeepCopy() *OrchestCluster {
	if in == nil {
		return nil
	}
	out := new(OrchestCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrchestCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrchestClusterList) DeepCopyInto(out *OrchestClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]*OrchestCluster, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(OrchestCluster)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrchestClusterList.
func (in *OrchestClusterList) DeepCopy() *OrchestClusterList {
	if in == nil {
		return nil
	}
	out := new(OrchestClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrchestClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrchestClusterSpec) DeepCopyInto(out *OrchestClusterSpec) {
	*out = *in
	in.Orchest.DeepCopyInto(&out.Orchest)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrchestClusterSpec.
func (in *OrchestClusterSpec) DeepCopy() *OrchestClusterSpec {
	if in == nil {
		return nil
	}
	out := new(OrchestClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrchestClusterStatus) DeepCopyInto(out *OrchestClusterStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrchestClusterStatus.
func (in *OrchestClusterStatus) DeepCopy() *OrchestClusterStatus {
	if in == nil {
		return nil
	}
	out := new(OrchestClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrchestSpec) DeepCopyInto(out *OrchestSpec) {
	*out = *in
	in.OrchestApi.DeepCopyInto(&out.OrchestApi)
	in.OrchestWebServer.DeepCopyInto(&out.OrchestWebServer)
	in.CeleryWorker.DeepCopyInto(&out.CeleryWorker)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrchestSpec.
func (in *OrchestSpec) DeepCopy() *OrchestSpec {
	if in == nil {
		return nil
	}
	out := new(OrchestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpec) DeepCopyInto(out *RegistrySpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpec.
func (in *RegistrySpec) DeepCopy() *RegistrySpec {
	if in == nil {
		return nil
	}
	out := new(RegistrySpec)
	in.DeepCopyInto(out)
	return out
}
